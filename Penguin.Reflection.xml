<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Reflection</name>
    </assembly>
    <members>
        <member name="M:Penguin.Reflection.ReflectiveEnumerator.GetEnumerableOfType``1">
            <summary>
            Gets all subtypes (inc specified) in current executing assembly
            </summary>
            <typeparam name="T">The root type to check for</typeparam>
            <returns>All the subtypes.</returns>
        </member>
        <member name="M:Penguin.Reflection.ReflectiveEnumerator.GetInstancesOfType``1(System.Object[])">
            <summary>
            For the specified type, returns a list of new instances of every type or subtype
            </summary>
            <typeparam name="T">The root type to check for</typeparam>
            <param name="constructorArgs">Any applicable constuctor arguments</param>
            <returns>A list of new instances of every type or subtype</returns>
        </member>
        <member name="M:Penguin.Reflection.ReflectiveEnumerator.GetTypesThatImplementInterface``1">
            <summary>
            Gets all types from the executing assembly that implement an interface
            </summary>
            <typeparam name="T">The interface to check for</typeparam>
            <returns>All the types</returns>
        </member>
    </members>
</doc>
